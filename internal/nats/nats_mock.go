// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package nats is a generated GoMock package.
package nats

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNATSService is a mock of NATSService interface.
type MockNATSService struct {
	ctrl     *gomock.Controller
	recorder *MockNATSServiceMockRecorder
}

// MockNATSServiceMockRecorder is the mock recorder for MockNATSService.
type MockNATSServiceMockRecorder struct {
	mock *MockNATSService
}

// NewMockNATSService creates a new mock instance.
func NewMockNATSService(ctrl *gomock.Controller) *MockNATSService {
	mock := &MockNATSService{ctrl: ctrl}
	mock.recorder = &MockNATSServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNATSService) EXPECT() *MockNATSServiceMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockNATSService) Publish(data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockNATSServiceMockRecorder) Publish(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockNATSService)(nil).Publish), data)
}

// Subscribe mocks base method.
func (m *MockNATSService) Subscribe(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Subscribe", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Subscribe indicates an expected call of Subscribe.
func (mr *MockNATSServiceMockRecorder) Subscribe(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Subscribe", reflect.TypeOf((*MockNATSService)(nil).Subscribe), ctx)
}
